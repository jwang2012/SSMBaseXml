<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="  
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 配置自动注解扫描 -->
	<context:component-scan base-package="com.jwang.*"></context:component-scan>
	
	<!-- 配置开启缓存 -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <!-- 配置EhCache的CacheManager通过configLocation指定ehcache.xml文件的位置 -->
    <bean id="ehCacheManager"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:configLocation="classpath:config/ehcache.xml"
        p:shared="false" />
    <!-- 配置基于EhCache的缓存管理器并将EhCache的CacheManager注入该缓存管理器Bean -->
    <bean id="cacheManager"
        class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cacheManager-ref="ehCacheManager" > 
    </bean>
	
	<context:property-placeholder location="classpath:config/*.properties"/>
	<!-- 配置数据源 -->
	<context:annotation-config />
	<!-- 加载dbconfig.properties配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/dbconfig.properties</value>
			</list>
		</property>
	</bean>

	<!--创建数据源1，连接数据库db1 -->
	<bean id="lira" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db1.driverClassName}" />
		<property name="url" value="${db1.url}" />
		<property name="username" value="${db1.userName}" />
		<property name="password" value="${db1.password}" />
	</bean>
	<!--创建数据源2，连接数据库db2 -->
	<bean id="pira" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db2.driverClassName}" />
		<property name="url" value="${db2.url}" />
		<property name="username" value="${db2.userName}" />
		<property name="password" value="${db2.password}" />
	</bean>
	<!--创建数据源3，连接数据库db3 -->
	<bean id="dbsyn" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db3.driverClassName}" />
		<property name="url" value="${db3.url}" />
		<property name="username" value="${db3.userName}" />
		<property name="password" value="${db3.password}" />
	</bean>

	<bean id="dynamicDataSource" class="com.jwang.ssmxml.common.database.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!-- 指定lookupKey和与之对应的数据源 -->
				<entry key="lira" value-ref="lira"></entry>
				<entry key="pira" value-ref="pira"></entry>
				<entry key="dbsyn " value-ref="dbsyn"></entry>
			</map>
		</property>
		<!-- 这里可以指定默认的数据源 -->
		<property name="defaultTargetDataSource" ref="lira" />
	</bean>
	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<!-- 注解形式使用事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置mybatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dynamicDataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:config/mybatis/mapper_manage_conf.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jwang.ssmxml.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- 配置定时任务 -->
	<!-- 配置AOP -->
</beans>  